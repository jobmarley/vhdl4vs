//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from vhdl.g4 by ANTLR 4.9.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="vhdlParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.3")]
[System.CLSCompliant(false)]
public interface IvhdlListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.abstract_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAbstract_literal([NotNull] vhdlParser.Abstract_literalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.abstract_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAbstract_literal([NotNull] vhdlParser.Abstract_literalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.access_type_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAccess_type_definition([NotNull] vhdlParser.Access_type_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.access_type_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAccess_type_definition([NotNull] vhdlParser.Access_type_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.across_aspect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAcross_aspect([NotNull] vhdlParser.Across_aspectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.across_aspect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAcross_aspect([NotNull] vhdlParser.Across_aspectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.actual_designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterActual_designator([NotNull] vhdlParser.Actual_designatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.actual_designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitActual_designator([NotNull] vhdlParser.Actual_designatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.actual_parameter_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterActual_parameter_part([NotNull] vhdlParser.Actual_parameter_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.actual_parameter_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitActual_parameter_part([NotNull] vhdlParser.Actual_parameter_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.actual_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterActual_part([NotNull] vhdlParser.Actual_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.actual_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitActual_part([NotNull] vhdlParser.Actual_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.adding_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdding_operator([NotNull] vhdlParser.Adding_operatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.adding_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdding_operator([NotNull] vhdlParser.Adding_operatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.aggregate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAggregate([NotNull] vhdlParser.AggregateContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.aggregate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAggregate([NotNull] vhdlParser.AggregateContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.alias_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlias_declaration([NotNull] vhdlParser.Alias_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.alias_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlias_declaration([NotNull] vhdlParser.Alias_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.alias_designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlias_designator([NotNull] vhdlParser.Alias_designatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.alias_designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlias_designator([NotNull] vhdlParser.Alias_designatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.alias_indication"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlias_indication([NotNull] vhdlParser.Alias_indicationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.alias_indication"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlias_indication([NotNull] vhdlParser.Alias_indicationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.allocator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAllocator([NotNull] vhdlParser.AllocatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.allocator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAllocator([NotNull] vhdlParser.AllocatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.architecture_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArchitecture_body([NotNull] vhdlParser.Architecture_bodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.architecture_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArchitecture_body([NotNull] vhdlParser.Architecture_bodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.architecture_declarative_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArchitecture_declarative_part([NotNull] vhdlParser.Architecture_declarative_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.architecture_declarative_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArchitecture_declarative_part([NotNull] vhdlParser.Architecture_declarative_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.architecture_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArchitecture_statement([NotNull] vhdlParser.Architecture_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.architecture_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArchitecture_statement([NotNull] vhdlParser.Architecture_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.architecture_statement_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArchitecture_statement_part([NotNull] vhdlParser.Architecture_statement_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.architecture_statement_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArchitecture_statement_part([NotNull] vhdlParser.Architecture_statement_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.array_nature_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArray_nature_definition([NotNull] vhdlParser.Array_nature_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.array_nature_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArray_nature_definition([NotNull] vhdlParser.Array_nature_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.array_type_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArray_type_definition([NotNull] vhdlParser.Array_type_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.array_type_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArray_type_definition([NotNull] vhdlParser.Array_type_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.assertion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssertion([NotNull] vhdlParser.AssertionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.assertion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssertion([NotNull] vhdlParser.AssertionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.assertion_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssertion_statement([NotNull] vhdlParser.Assertion_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.assertion_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssertion_statement([NotNull] vhdlParser.Assertion_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.association_element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssociation_element([NotNull] vhdlParser.Association_elementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.association_element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssociation_element([NotNull] vhdlParser.Association_elementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.association_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssociation_list([NotNull] vhdlParser.Association_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.association_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssociation_list([NotNull] vhdlParser.Association_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.attribute_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttribute_declaration([NotNull] vhdlParser.Attribute_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.attribute_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttribute_declaration([NotNull] vhdlParser.Attribute_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.attribute_designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttribute_designator([NotNull] vhdlParser.Attribute_designatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.attribute_designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttribute_designator([NotNull] vhdlParser.Attribute_designatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.attribute_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttribute_specification([NotNull] vhdlParser.Attribute_specificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.attribute_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttribute_specification([NotNull] vhdlParser.Attribute_specificationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.base_unit_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBase_unit_declaration([NotNull] vhdlParser.Base_unit_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.base_unit_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBase_unit_declaration([NotNull] vhdlParser.Base_unit_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.binding_indication"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBinding_indication([NotNull] vhdlParser.Binding_indicationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.binding_indication"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBinding_indication([NotNull] vhdlParser.Binding_indicationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.block_configuration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock_configuration([NotNull] vhdlParser.Block_configurationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.block_configuration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock_configuration([NotNull] vhdlParser.Block_configurationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.block_declarative_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock_declarative_item([NotNull] vhdlParser.Block_declarative_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.block_declarative_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock_declarative_item([NotNull] vhdlParser.Block_declarative_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.block_declarative_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock_declarative_part([NotNull] vhdlParser.Block_declarative_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.block_declarative_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock_declarative_part([NotNull] vhdlParser.Block_declarative_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.block_header"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock_header([NotNull] vhdlParser.Block_headerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.block_header"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock_header([NotNull] vhdlParser.Block_headerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.block_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock_specification([NotNull] vhdlParser.Block_specificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.block_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock_specification([NotNull] vhdlParser.Block_specificationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.block_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock_statement([NotNull] vhdlParser.Block_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.block_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock_statement([NotNull] vhdlParser.Block_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.block_statement_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock_statement_part([NotNull] vhdlParser.Block_statement_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.block_statement_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock_statement_part([NotNull] vhdlParser.Block_statement_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.branch_quantity_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBranch_quantity_declaration([NotNull] vhdlParser.Branch_quantity_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.branch_quantity_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBranch_quantity_declaration([NotNull] vhdlParser.Branch_quantity_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.break_element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreak_element([NotNull] vhdlParser.Break_elementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.break_element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreak_element([NotNull] vhdlParser.Break_elementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.break_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreak_list([NotNull] vhdlParser.Break_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.break_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreak_list([NotNull] vhdlParser.Break_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.break_selector_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreak_selector_clause([NotNull] vhdlParser.Break_selector_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.break_selector_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreak_selector_clause([NotNull] vhdlParser.Break_selector_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.break_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreak_statement([NotNull] vhdlParser.Break_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.break_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreak_statement([NotNull] vhdlParser.Break_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.case_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCase_statement([NotNull] vhdlParser.Case_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.case_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCase_statement([NotNull] vhdlParser.Case_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.case_statement_alternative"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCase_statement_alternative([NotNull] vhdlParser.Case_statement_alternativeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.case_statement_alternative"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCase_statement_alternative([NotNull] vhdlParser.Case_statement_alternativeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.choice"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterChoice([NotNull] vhdlParser.ChoiceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.choice"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitChoice([NotNull] vhdlParser.ChoiceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.choices"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterChoices([NotNull] vhdlParser.ChoicesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.choices"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitChoices([NotNull] vhdlParser.ChoicesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.component_configuration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComponent_configuration([NotNull] vhdlParser.Component_configurationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.component_configuration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComponent_configuration([NotNull] vhdlParser.Component_configurationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.component_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComponent_declaration([NotNull] vhdlParser.Component_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.component_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComponent_declaration([NotNull] vhdlParser.Component_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.component_instantiation_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComponent_instantiation_statement([NotNull] vhdlParser.Component_instantiation_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.component_instantiation_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComponent_instantiation_statement([NotNull] vhdlParser.Component_instantiation_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.component_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComponent_specification([NotNull] vhdlParser.Component_specificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.component_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComponent_specification([NotNull] vhdlParser.Component_specificationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.composite_nature_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComposite_nature_definition([NotNull] vhdlParser.Composite_nature_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.composite_nature_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComposite_nature_definition([NotNull] vhdlParser.Composite_nature_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.composite_type_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComposite_type_definition([NotNull] vhdlParser.Composite_type_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.composite_type_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComposite_type_definition([NotNull] vhdlParser.Composite_type_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.concurrent_assertion_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConcurrent_assertion_statement([NotNull] vhdlParser.Concurrent_assertion_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.concurrent_assertion_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConcurrent_assertion_statement([NotNull] vhdlParser.Concurrent_assertion_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.concurrent_break_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConcurrent_break_statement([NotNull] vhdlParser.Concurrent_break_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.concurrent_break_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConcurrent_break_statement([NotNull] vhdlParser.Concurrent_break_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.concurrent_procedure_call_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConcurrent_procedure_call_statement([NotNull] vhdlParser.Concurrent_procedure_call_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.concurrent_procedure_call_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConcurrent_procedure_call_statement([NotNull] vhdlParser.Concurrent_procedure_call_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.concurrent_signal_assignment_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConcurrent_signal_assignment_statement([NotNull] vhdlParser.Concurrent_signal_assignment_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.concurrent_signal_assignment_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConcurrent_signal_assignment_statement([NotNull] vhdlParser.Concurrent_signal_assignment_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondition([NotNull] vhdlParser.ConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondition([NotNull] vhdlParser.ConditionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.condition_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondition_clause([NotNull] vhdlParser.Condition_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.condition_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondition_clause([NotNull] vhdlParser.Condition_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.conditional_signal_assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditional_signal_assignment([NotNull] vhdlParser.Conditional_signal_assignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.conditional_signal_assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditional_signal_assignment([NotNull] vhdlParser.Conditional_signal_assignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.conditional_waveforms"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditional_waveforms([NotNull] vhdlParser.Conditional_waveformsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.conditional_waveforms"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditional_waveforms([NotNull] vhdlParser.Conditional_waveformsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.configuration_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConfiguration_declaration([NotNull] vhdlParser.Configuration_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.configuration_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConfiguration_declaration([NotNull] vhdlParser.Configuration_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.configuration_declarative_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConfiguration_declarative_item([NotNull] vhdlParser.Configuration_declarative_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.configuration_declarative_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConfiguration_declarative_item([NotNull] vhdlParser.Configuration_declarative_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.configuration_declarative_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConfiguration_declarative_part([NotNull] vhdlParser.Configuration_declarative_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.configuration_declarative_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConfiguration_declarative_part([NotNull] vhdlParser.Configuration_declarative_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.configuration_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConfiguration_item([NotNull] vhdlParser.Configuration_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.configuration_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConfiguration_item([NotNull] vhdlParser.Configuration_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.configuration_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConfiguration_specification([NotNull] vhdlParser.Configuration_specificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.configuration_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConfiguration_specification([NotNull] vhdlParser.Configuration_specificationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.constant_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstant_declaration([NotNull] vhdlParser.Constant_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.constant_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstant_declaration([NotNull] vhdlParser.Constant_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.constrained_array_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstrained_array_definition([NotNull] vhdlParser.Constrained_array_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.constrained_array_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstrained_array_definition([NotNull] vhdlParser.Constrained_array_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.constrained_nature_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstrained_nature_definition([NotNull] vhdlParser.Constrained_nature_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.constrained_nature_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstrained_nature_definition([NotNull] vhdlParser.Constrained_nature_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.constraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstraint([NotNull] vhdlParser.ConstraintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.constraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstraint([NotNull] vhdlParser.ConstraintContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.context_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterContext_clause([NotNull] vhdlParser.Context_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.context_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitContext_clause([NotNull] vhdlParser.Context_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.context_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterContext_item([NotNull] vhdlParser.Context_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.context_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitContext_item([NotNull] vhdlParser.Context_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.delay_mechanism"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDelay_mechanism([NotNull] vhdlParser.Delay_mechanismContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.delay_mechanism"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDelay_mechanism([NotNull] vhdlParser.Delay_mechanismContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.design_file"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDesign_file([NotNull] vhdlParser.Design_fileContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.design_file"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDesign_file([NotNull] vhdlParser.Design_fileContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.design_unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDesign_unit([NotNull] vhdlParser.Design_unitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.design_unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDesign_unit([NotNull] vhdlParser.Design_unitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDesignator([NotNull] vhdlParser.DesignatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDesignator([NotNull] vhdlParser.DesignatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.direction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDirection([NotNull] vhdlParser.DirectionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.direction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDirection([NotNull] vhdlParser.DirectionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.disconnection_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDisconnection_specification([NotNull] vhdlParser.Disconnection_specificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.disconnection_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDisconnection_specification([NotNull] vhdlParser.Disconnection_specificationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.discrete_range"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDiscrete_range([NotNull] vhdlParser.Discrete_rangeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.discrete_range"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDiscrete_range([NotNull] vhdlParser.Discrete_rangeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.element_association"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElement_association([NotNull] vhdlParser.Element_associationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.element_association"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElement_association([NotNull] vhdlParser.Element_associationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.element_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElement_declaration([NotNull] vhdlParser.Element_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.element_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElement_declaration([NotNull] vhdlParser.Element_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.element_subnature_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElement_subnature_definition([NotNull] vhdlParser.Element_subnature_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.element_subnature_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElement_subnature_definition([NotNull] vhdlParser.Element_subnature_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.element_subtype_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElement_subtype_definition([NotNull] vhdlParser.Element_subtype_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.element_subtype_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElement_subtype_definition([NotNull] vhdlParser.Element_subtype_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.entity_aspect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEntity_aspect([NotNull] vhdlParser.Entity_aspectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.entity_aspect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEntity_aspect([NotNull] vhdlParser.Entity_aspectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.entity_class"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEntity_class([NotNull] vhdlParser.Entity_classContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.entity_class"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEntity_class([NotNull] vhdlParser.Entity_classContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.entity_class_entry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEntity_class_entry([NotNull] vhdlParser.Entity_class_entryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.entity_class_entry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEntity_class_entry([NotNull] vhdlParser.Entity_class_entryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.entity_class_entry_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEntity_class_entry_list([NotNull] vhdlParser.Entity_class_entry_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.entity_class_entry_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEntity_class_entry_list([NotNull] vhdlParser.Entity_class_entry_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.entity_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEntity_declaration([NotNull] vhdlParser.Entity_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.entity_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEntity_declaration([NotNull] vhdlParser.Entity_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.entity_declarative_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEntity_declarative_item([NotNull] vhdlParser.Entity_declarative_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.entity_declarative_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEntity_declarative_item([NotNull] vhdlParser.Entity_declarative_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.entity_declarative_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEntity_declarative_part([NotNull] vhdlParser.Entity_declarative_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.entity_declarative_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEntity_declarative_part([NotNull] vhdlParser.Entity_declarative_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.entity_designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEntity_designator([NotNull] vhdlParser.Entity_designatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.entity_designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEntity_designator([NotNull] vhdlParser.Entity_designatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.entity_header"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEntity_header([NotNull] vhdlParser.Entity_headerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.entity_header"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEntity_header([NotNull] vhdlParser.Entity_headerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.entity_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEntity_name_list([NotNull] vhdlParser.Entity_name_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.entity_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEntity_name_list([NotNull] vhdlParser.Entity_name_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.entity_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEntity_specification([NotNull] vhdlParser.Entity_specificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.entity_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEntity_specification([NotNull] vhdlParser.Entity_specificationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.entity_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEntity_statement([NotNull] vhdlParser.Entity_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.entity_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEntity_statement([NotNull] vhdlParser.Entity_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.entity_statement_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEntity_statement_part([NotNull] vhdlParser.Entity_statement_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.entity_statement_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEntity_statement_part([NotNull] vhdlParser.Entity_statement_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.entity_tag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEntity_tag([NotNull] vhdlParser.Entity_tagContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.entity_tag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEntity_tag([NotNull] vhdlParser.Entity_tagContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.enumeration_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumeration_literal([NotNull] vhdlParser.Enumeration_literalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.enumeration_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumeration_literal([NotNull] vhdlParser.Enumeration_literalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.enumeration_type_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumeration_type_definition([NotNull] vhdlParser.Enumeration_type_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.enumeration_type_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumeration_type_definition([NotNull] vhdlParser.Enumeration_type_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.exit_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExit_statement([NotNull] vhdlParser.Exit_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.exit_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExit_statement([NotNull] vhdlParser.Exit_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] vhdlParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] vhdlParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactor([NotNull] vhdlParser.FactorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactor([NotNull] vhdlParser.FactorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.file_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFile_declaration([NotNull] vhdlParser.File_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.file_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFile_declaration([NotNull] vhdlParser.File_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.file_logical_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFile_logical_name([NotNull] vhdlParser.File_logical_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.file_logical_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFile_logical_name([NotNull] vhdlParser.File_logical_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.file_open_information"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFile_open_information([NotNull] vhdlParser.File_open_informationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.file_open_information"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFile_open_information([NotNull] vhdlParser.File_open_informationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.file_type_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFile_type_definition([NotNull] vhdlParser.File_type_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.file_type_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFile_type_definition([NotNull] vhdlParser.File_type_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.formal_parameter_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormal_parameter_list([NotNull] vhdlParser.Formal_parameter_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.formal_parameter_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormal_parameter_list([NotNull] vhdlParser.Formal_parameter_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.formal_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormal_part([NotNull] vhdlParser.Formal_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.formal_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormal_part([NotNull] vhdlParser.Formal_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.free_quantity_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFree_quantity_declaration([NotNull] vhdlParser.Free_quantity_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.free_quantity_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFree_quantity_declaration([NotNull] vhdlParser.Free_quantity_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.generate_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGenerate_statement([NotNull] vhdlParser.Generate_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.generate_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGenerate_statement([NotNull] vhdlParser.Generate_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.generation_scheme"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGeneration_scheme([NotNull] vhdlParser.Generation_schemeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.generation_scheme"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGeneration_scheme([NotNull] vhdlParser.Generation_schemeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.generic_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGeneric_clause([NotNull] vhdlParser.Generic_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.generic_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGeneric_clause([NotNull] vhdlParser.Generic_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.generic_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGeneric_list([NotNull] vhdlParser.Generic_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.generic_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGeneric_list([NotNull] vhdlParser.Generic_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.generic_map_aspect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGeneric_map_aspect([NotNull] vhdlParser.Generic_map_aspectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.generic_map_aspect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGeneric_map_aspect([NotNull] vhdlParser.Generic_map_aspectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.group_constituent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGroup_constituent([NotNull] vhdlParser.Group_constituentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.group_constituent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGroup_constituent([NotNull] vhdlParser.Group_constituentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.group_constituent_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGroup_constituent_list([NotNull] vhdlParser.Group_constituent_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.group_constituent_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGroup_constituent_list([NotNull] vhdlParser.Group_constituent_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.group_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGroup_declaration([NotNull] vhdlParser.Group_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.group_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGroup_declaration([NotNull] vhdlParser.Group_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.group_template_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGroup_template_declaration([NotNull] vhdlParser.Group_template_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.group_template_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGroup_template_declaration([NotNull] vhdlParser.Group_template_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.guarded_signal_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGuarded_signal_specification([NotNull] vhdlParser.Guarded_signal_specificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.guarded_signal_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGuarded_signal_specification([NotNull] vhdlParser.Guarded_signal_specificationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] vhdlParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] vhdlParser.IdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.identifier_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier_list([NotNull] vhdlParser.Identifier_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.identifier_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier_list([NotNull] vhdlParser.Identifier_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf_statement([NotNull] vhdlParser.If_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf_statement([NotNull] vhdlParser.If_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.index_constraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndex_constraint([NotNull] vhdlParser.Index_constraintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.index_constraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndex_constraint([NotNull] vhdlParser.Index_constraintContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.index_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndex_specification([NotNull] vhdlParser.Index_specificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.index_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndex_specification([NotNull] vhdlParser.Index_specificationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.index_subtype_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndex_subtype_definition([NotNull] vhdlParser.Index_subtype_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.index_subtype_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndex_subtype_definition([NotNull] vhdlParser.Index_subtype_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.instantiated_unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInstantiated_unit([NotNull] vhdlParser.Instantiated_unitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.instantiated_unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInstantiated_unit([NotNull] vhdlParser.Instantiated_unitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.instantiation_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInstantiation_list([NotNull] vhdlParser.Instantiation_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.instantiation_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInstantiation_list([NotNull] vhdlParser.Instantiation_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.interface_constant_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterface_constant_declaration([NotNull] vhdlParser.Interface_constant_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.interface_constant_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterface_constant_declaration([NotNull] vhdlParser.Interface_constant_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.interface_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterface_declaration([NotNull] vhdlParser.Interface_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.interface_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterface_declaration([NotNull] vhdlParser.Interface_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.interface_element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterface_element([NotNull] vhdlParser.Interface_elementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.interface_element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterface_element([NotNull] vhdlParser.Interface_elementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.interface_file_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterface_file_declaration([NotNull] vhdlParser.Interface_file_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.interface_file_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterface_file_declaration([NotNull] vhdlParser.Interface_file_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.interface_signal_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterface_signal_list([NotNull] vhdlParser.Interface_signal_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.interface_signal_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterface_signal_list([NotNull] vhdlParser.Interface_signal_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.interface_port_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterface_port_list([NotNull] vhdlParser.Interface_port_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.interface_port_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterface_port_list([NotNull] vhdlParser.Interface_port_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.interface_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterface_list([NotNull] vhdlParser.Interface_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.interface_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterface_list([NotNull] vhdlParser.Interface_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.interface_quantity_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterface_quantity_declaration([NotNull] vhdlParser.Interface_quantity_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.interface_quantity_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterface_quantity_declaration([NotNull] vhdlParser.Interface_quantity_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.interface_port_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterface_port_declaration([NotNull] vhdlParser.Interface_port_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.interface_port_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterface_port_declaration([NotNull] vhdlParser.Interface_port_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.interface_signal_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterface_signal_declaration([NotNull] vhdlParser.Interface_signal_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.interface_signal_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterface_signal_declaration([NotNull] vhdlParser.Interface_signal_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.interface_terminal_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterface_terminal_declaration([NotNull] vhdlParser.Interface_terminal_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.interface_terminal_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterface_terminal_declaration([NotNull] vhdlParser.Interface_terminal_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.interface_variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterface_variable_declaration([NotNull] vhdlParser.Interface_variable_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.interface_variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterface_variable_declaration([NotNull] vhdlParser.Interface_variable_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.iteration_scheme"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIteration_scheme([NotNull] vhdlParser.Iteration_schemeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.iteration_scheme"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIteration_scheme([NotNull] vhdlParser.Iteration_schemeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.label_colon"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLabel_colon([NotNull] vhdlParser.Label_colonContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.label_colon"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLabel_colon([NotNull] vhdlParser.Label_colonContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.library_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLibrary_clause([NotNull] vhdlParser.Library_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.library_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLibrary_clause([NotNull] vhdlParser.Library_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.library_unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLibrary_unit([NotNull] vhdlParser.Library_unitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.library_unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLibrary_unit([NotNull] vhdlParser.Library_unitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] vhdlParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] vhdlParser.LiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.logical_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogical_name([NotNull] vhdlParser.Logical_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.logical_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogical_name([NotNull] vhdlParser.Logical_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.logical_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogical_name_list([NotNull] vhdlParser.Logical_name_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.logical_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogical_name_list([NotNull] vhdlParser.Logical_name_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.logical_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogical_operator([NotNull] vhdlParser.Logical_operatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.logical_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogical_operator([NotNull] vhdlParser.Logical_operatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.loop_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoop_statement([NotNull] vhdlParser.Loop_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.loop_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoop_statement([NotNull] vhdlParser.Loop_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.signal_mode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSignal_mode([NotNull] vhdlParser.Signal_modeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.signal_mode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSignal_mode([NotNull] vhdlParser.Signal_modeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.multiplying_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplying_operator([NotNull] vhdlParser.Multiplying_operatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.multiplying_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplying_operator([NotNull] vhdlParser.Multiplying_operatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterName([NotNull] vhdlParser.NameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitName([NotNull] vhdlParser.NameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.name_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterName_part([NotNull] vhdlParser.Name_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.name_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitName_part([NotNull] vhdlParser.Name_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.name_attribute_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterName_attribute_part([NotNull] vhdlParser.Name_attribute_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.name_attribute_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitName_attribute_part([NotNull] vhdlParser.Name_attribute_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.name_function_call_or_indexed_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterName_function_call_or_indexed_part([NotNull] vhdlParser.Name_function_call_or_indexed_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.name_function_call_or_indexed_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitName_function_call_or_indexed_part([NotNull] vhdlParser.Name_function_call_or_indexed_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.name_slice_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterName_slice_part([NotNull] vhdlParser.Name_slice_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.name_slice_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitName_slice_part([NotNull] vhdlParser.Name_slice_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.selected_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelected_name([NotNull] vhdlParser.Selected_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.selected_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelected_name([NotNull] vhdlParser.Selected_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.nature_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNature_declaration([NotNull] vhdlParser.Nature_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.nature_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNature_declaration([NotNull] vhdlParser.Nature_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.nature_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNature_definition([NotNull] vhdlParser.Nature_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.nature_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNature_definition([NotNull] vhdlParser.Nature_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.nature_element_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNature_element_declaration([NotNull] vhdlParser.Nature_element_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.nature_element_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNature_element_declaration([NotNull] vhdlParser.Nature_element_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.next_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNext_statement([NotNull] vhdlParser.Next_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.next_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNext_statement([NotNull] vhdlParser.Next_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.numeric_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumeric_literal([NotNull] vhdlParser.Numeric_literalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.numeric_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumeric_literal([NotNull] vhdlParser.Numeric_literalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.object_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObject_declaration([NotNull] vhdlParser.Object_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.object_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObject_declaration([NotNull] vhdlParser.Object_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.opts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpts([NotNull] vhdlParser.OptsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.opts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpts([NotNull] vhdlParser.OptsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.package_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPackage_body([NotNull] vhdlParser.Package_bodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.package_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPackage_body([NotNull] vhdlParser.Package_bodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.package_body_declarative_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPackage_body_declarative_item([NotNull] vhdlParser.Package_body_declarative_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.package_body_declarative_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPackage_body_declarative_item([NotNull] vhdlParser.Package_body_declarative_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.package_body_declarative_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPackage_body_declarative_part([NotNull] vhdlParser.Package_body_declarative_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.package_body_declarative_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPackage_body_declarative_part([NotNull] vhdlParser.Package_body_declarative_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.package_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPackage_declaration([NotNull] vhdlParser.Package_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.package_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPackage_declaration([NotNull] vhdlParser.Package_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.package_declarative_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPackage_declarative_item([NotNull] vhdlParser.Package_declarative_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.package_declarative_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPackage_declarative_item([NotNull] vhdlParser.Package_declarative_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.package_declarative_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPackage_declarative_part([NotNull] vhdlParser.Package_declarative_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.package_declarative_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPackage_declarative_part([NotNull] vhdlParser.Package_declarative_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.parameter_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameter_specification([NotNull] vhdlParser.Parameter_specificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.parameter_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameter_specification([NotNull] vhdlParser.Parameter_specificationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.physical_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPhysical_literal([NotNull] vhdlParser.Physical_literalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.physical_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPhysical_literal([NotNull] vhdlParser.Physical_literalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.physical_type_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPhysical_type_definition([NotNull] vhdlParser.Physical_type_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.physical_type_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPhysical_type_definition([NotNull] vhdlParser.Physical_type_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.port_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPort_clause([NotNull] vhdlParser.Port_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.port_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPort_clause([NotNull] vhdlParser.Port_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.port_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPort_list([NotNull] vhdlParser.Port_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.port_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPort_list([NotNull] vhdlParser.Port_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.port_map_aspect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPort_map_aspect([NotNull] vhdlParser.Port_map_aspectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.port_map_aspect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPort_map_aspect([NotNull] vhdlParser.Port_map_aspectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimary([NotNull] vhdlParser.PrimaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimary([NotNull] vhdlParser.PrimaryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.primary_unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimary_unit([NotNull] vhdlParser.Primary_unitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.primary_unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimary_unit([NotNull] vhdlParser.Primary_unitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.procedural_declarative_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProcedural_declarative_item([NotNull] vhdlParser.Procedural_declarative_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.procedural_declarative_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProcedural_declarative_item([NotNull] vhdlParser.Procedural_declarative_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.procedural_declarative_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProcedural_declarative_part([NotNull] vhdlParser.Procedural_declarative_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.procedural_declarative_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProcedural_declarative_part([NotNull] vhdlParser.Procedural_declarative_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.procedural_statement_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProcedural_statement_part([NotNull] vhdlParser.Procedural_statement_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.procedural_statement_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProcedural_statement_part([NotNull] vhdlParser.Procedural_statement_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.procedure_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProcedure_call([NotNull] vhdlParser.Procedure_callContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.procedure_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProcedure_call([NotNull] vhdlParser.Procedure_callContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.procedure_call_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProcedure_call_statement([NotNull] vhdlParser.Procedure_call_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.procedure_call_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProcedure_call_statement([NotNull] vhdlParser.Procedure_call_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.process_declarative_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProcess_declarative_item([NotNull] vhdlParser.Process_declarative_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.process_declarative_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProcess_declarative_item([NotNull] vhdlParser.Process_declarative_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.process_declarative_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProcess_declarative_part([NotNull] vhdlParser.Process_declarative_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.process_declarative_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProcess_declarative_part([NotNull] vhdlParser.Process_declarative_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.process_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProcess_statement([NotNull] vhdlParser.Process_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.process_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProcess_statement([NotNull] vhdlParser.Process_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.process_statement_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProcess_statement_part([NotNull] vhdlParser.Process_statement_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.process_statement_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProcess_statement_part([NotNull] vhdlParser.Process_statement_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.qualified_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQualified_expression([NotNull] vhdlParser.Qualified_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.qualified_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQualified_expression([NotNull] vhdlParser.Qualified_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.quantity_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuantity_declaration([NotNull] vhdlParser.Quantity_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.quantity_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuantity_declaration([NotNull] vhdlParser.Quantity_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.quantity_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuantity_list([NotNull] vhdlParser.Quantity_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.quantity_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuantity_list([NotNull] vhdlParser.Quantity_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.quantity_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuantity_specification([NotNull] vhdlParser.Quantity_specificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.quantity_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuantity_specification([NotNull] vhdlParser.Quantity_specificationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.range_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRange_decl([NotNull] vhdlParser.Range_declContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.range_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRange_decl([NotNull] vhdlParser.Range_declContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.explicit_range"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplicit_range([NotNull] vhdlParser.Explicit_rangeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.explicit_range"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplicit_range([NotNull] vhdlParser.Explicit_rangeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.range_constraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRange_constraint([NotNull] vhdlParser.Range_constraintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.range_constraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRange_constraint([NotNull] vhdlParser.Range_constraintContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.record_nature_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRecord_nature_definition([NotNull] vhdlParser.Record_nature_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.record_nature_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRecord_nature_definition([NotNull] vhdlParser.Record_nature_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.record_type_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRecord_type_definition([NotNull] vhdlParser.Record_type_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.record_type_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRecord_type_definition([NotNull] vhdlParser.Record_type_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.relation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelation([NotNull] vhdlParser.RelationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.relation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelation([NotNull] vhdlParser.RelationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.relational_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelational_operator([NotNull] vhdlParser.Relational_operatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.relational_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelational_operator([NotNull] vhdlParser.Relational_operatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.report_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReport_statement([NotNull] vhdlParser.Report_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.report_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReport_statement([NotNull] vhdlParser.Report_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.return_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturn_statement([NotNull] vhdlParser.Return_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.return_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturn_statement([NotNull] vhdlParser.Return_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.scalar_nature_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScalar_nature_definition([NotNull] vhdlParser.Scalar_nature_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.scalar_nature_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScalar_nature_definition([NotNull] vhdlParser.Scalar_nature_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.scalar_type_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScalar_type_definition([NotNull] vhdlParser.Scalar_type_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.scalar_type_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScalar_type_definition([NotNull] vhdlParser.Scalar_type_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.secondary_unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSecondary_unit([NotNull] vhdlParser.Secondary_unitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.secondary_unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSecondary_unit([NotNull] vhdlParser.Secondary_unitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.secondary_unit_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSecondary_unit_declaration([NotNull] vhdlParser.Secondary_unit_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.secondary_unit_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSecondary_unit_declaration([NotNull] vhdlParser.Secondary_unit_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.selected_signal_assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelected_signal_assignment([NotNull] vhdlParser.Selected_signal_assignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.selected_signal_assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelected_signal_assignment([NotNull] vhdlParser.Selected_signal_assignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.selected_waveforms"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelected_waveforms([NotNull] vhdlParser.Selected_waveformsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.selected_waveforms"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelected_waveforms([NotNull] vhdlParser.Selected_waveformsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.sensitivity_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSensitivity_clause([NotNull] vhdlParser.Sensitivity_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.sensitivity_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSensitivity_clause([NotNull] vhdlParser.Sensitivity_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.sensitivity_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSensitivity_list([NotNull] vhdlParser.Sensitivity_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.sensitivity_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSensitivity_list([NotNull] vhdlParser.Sensitivity_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.sequence_of_statements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSequence_of_statements([NotNull] vhdlParser.Sequence_of_statementsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.sequence_of_statements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSequence_of_statements([NotNull] vhdlParser.Sequence_of_statementsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.sequential_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSequential_statement([NotNull] vhdlParser.Sequential_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.sequential_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSequential_statement([NotNull] vhdlParser.Sequential_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.shift_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShift_expression([NotNull] vhdlParser.Shift_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.shift_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShift_expression([NotNull] vhdlParser.Shift_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.shift_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShift_operator([NotNull] vhdlParser.Shift_operatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.shift_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShift_operator([NotNull] vhdlParser.Shift_operatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.signal_assignment_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSignal_assignment_statement([NotNull] vhdlParser.Signal_assignment_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.signal_assignment_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSignal_assignment_statement([NotNull] vhdlParser.Signal_assignment_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.signal_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSignal_declaration([NotNull] vhdlParser.Signal_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.signal_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSignal_declaration([NotNull] vhdlParser.Signal_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.signal_kind"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSignal_kind([NotNull] vhdlParser.Signal_kindContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.signal_kind"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSignal_kind([NotNull] vhdlParser.Signal_kindContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.signal_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSignal_list([NotNull] vhdlParser.Signal_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.signal_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSignal_list([NotNull] vhdlParser.Signal_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.signature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSignature([NotNull] vhdlParser.SignatureContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.signature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSignature([NotNull] vhdlParser.SignatureContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.simple_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimple_expression([NotNull] vhdlParser.Simple_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.simple_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimple_expression([NotNull] vhdlParser.Simple_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.simple_simultaneous_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimple_simultaneous_statement([NotNull] vhdlParser.Simple_simultaneous_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.simple_simultaneous_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimple_simultaneous_statement([NotNull] vhdlParser.Simple_simultaneous_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.simultaneous_alternative"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimultaneous_alternative([NotNull] vhdlParser.Simultaneous_alternativeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.simultaneous_alternative"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimultaneous_alternative([NotNull] vhdlParser.Simultaneous_alternativeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.simultaneous_case_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimultaneous_case_statement([NotNull] vhdlParser.Simultaneous_case_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.simultaneous_case_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimultaneous_case_statement([NotNull] vhdlParser.Simultaneous_case_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.simultaneous_if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimultaneous_if_statement([NotNull] vhdlParser.Simultaneous_if_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.simultaneous_if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimultaneous_if_statement([NotNull] vhdlParser.Simultaneous_if_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.simultaneous_procedural_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimultaneous_procedural_statement([NotNull] vhdlParser.Simultaneous_procedural_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.simultaneous_procedural_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimultaneous_procedural_statement([NotNull] vhdlParser.Simultaneous_procedural_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.simultaneous_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimultaneous_statement([NotNull] vhdlParser.Simultaneous_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.simultaneous_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimultaneous_statement([NotNull] vhdlParser.Simultaneous_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.simultaneous_statement_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimultaneous_statement_part([NotNull] vhdlParser.Simultaneous_statement_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.simultaneous_statement_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimultaneous_statement_part([NotNull] vhdlParser.Simultaneous_statement_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.source_aspect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSource_aspect([NotNull] vhdlParser.Source_aspectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.source_aspect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSource_aspect([NotNull] vhdlParser.Source_aspectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.source_quantity_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSource_quantity_declaration([NotNull] vhdlParser.Source_quantity_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.source_quantity_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSource_quantity_declaration([NotNull] vhdlParser.Source_quantity_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.step_limit_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStep_limit_specification([NotNull] vhdlParser.Step_limit_specificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.step_limit_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStep_limit_specification([NotNull] vhdlParser.Step_limit_specificationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.subnature_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubnature_declaration([NotNull] vhdlParser.Subnature_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.subnature_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubnature_declaration([NotNull] vhdlParser.Subnature_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.subnature_indication"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubnature_indication([NotNull] vhdlParser.Subnature_indicationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.subnature_indication"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubnature_indication([NotNull] vhdlParser.Subnature_indicationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.subprogram_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubprogram_body([NotNull] vhdlParser.Subprogram_bodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.subprogram_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubprogram_body([NotNull] vhdlParser.Subprogram_bodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.subprogram_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubprogram_declaration([NotNull] vhdlParser.Subprogram_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.subprogram_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubprogram_declaration([NotNull] vhdlParser.Subprogram_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.subprogram_declarative_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubprogram_declarative_item([NotNull] vhdlParser.Subprogram_declarative_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.subprogram_declarative_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubprogram_declarative_item([NotNull] vhdlParser.Subprogram_declarative_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.subprogram_declarative_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubprogram_declarative_part([NotNull] vhdlParser.Subprogram_declarative_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.subprogram_declarative_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubprogram_declarative_part([NotNull] vhdlParser.Subprogram_declarative_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.subprogram_kind"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubprogram_kind([NotNull] vhdlParser.Subprogram_kindContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.subprogram_kind"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubprogram_kind([NotNull] vhdlParser.Subprogram_kindContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.subprogram_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubprogram_specification([NotNull] vhdlParser.Subprogram_specificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.subprogram_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubprogram_specification([NotNull] vhdlParser.Subprogram_specificationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.procedure_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProcedure_specification([NotNull] vhdlParser.Procedure_specificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.procedure_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProcedure_specification([NotNull] vhdlParser.Procedure_specificationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.function_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_specification([NotNull] vhdlParser.Function_specificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.function_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_specification([NotNull] vhdlParser.Function_specificationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.subprogram_statement_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubprogram_statement_part([NotNull] vhdlParser.Subprogram_statement_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.subprogram_statement_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubprogram_statement_part([NotNull] vhdlParser.Subprogram_statement_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.subtype_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubtype_declaration([NotNull] vhdlParser.Subtype_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.subtype_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubtype_declaration([NotNull] vhdlParser.Subtype_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.subtype_indication"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubtype_indication([NotNull] vhdlParser.Subtype_indicationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.subtype_indication"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubtype_indication([NotNull] vhdlParser.Subtype_indicationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.suffix"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSuffix([NotNull] vhdlParser.SuffixContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.suffix"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSuffix([NotNull] vhdlParser.SuffixContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTarget([NotNull] vhdlParser.TargetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTarget([NotNull] vhdlParser.TargetContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm([NotNull] vhdlParser.TermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm([NotNull] vhdlParser.TermContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.terminal_aspect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerminal_aspect([NotNull] vhdlParser.Terminal_aspectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.terminal_aspect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerminal_aspect([NotNull] vhdlParser.Terminal_aspectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.terminal_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerminal_declaration([NotNull] vhdlParser.Terminal_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.terminal_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerminal_declaration([NotNull] vhdlParser.Terminal_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.through_aspect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterThrough_aspect([NotNull] vhdlParser.Through_aspectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.through_aspect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitThrough_aspect([NotNull] vhdlParser.Through_aspectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.timeout_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimeout_clause([NotNull] vhdlParser.Timeout_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.timeout_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimeout_clause([NotNull] vhdlParser.Timeout_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.tolerance_aspect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTolerance_aspect([NotNull] vhdlParser.Tolerance_aspectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.tolerance_aspect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTolerance_aspect([NotNull] vhdlParser.Tolerance_aspectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.type_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_declaration([NotNull] vhdlParser.Type_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.type_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_declaration([NotNull] vhdlParser.Type_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.type_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_definition([NotNull] vhdlParser.Type_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.type_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_definition([NotNull] vhdlParser.Type_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.unconstrained_array_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnconstrained_array_definition([NotNull] vhdlParser.Unconstrained_array_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.unconstrained_array_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnconstrained_array_definition([NotNull] vhdlParser.Unconstrained_array_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.unconstrained_nature_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnconstrained_nature_definition([NotNull] vhdlParser.Unconstrained_nature_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.unconstrained_nature_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnconstrained_nature_definition([NotNull] vhdlParser.Unconstrained_nature_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.use_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUse_clause([NotNull] vhdlParser.Use_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.use_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUse_clause([NotNull] vhdlParser.Use_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.variable_assignment_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable_assignment_statement([NotNull] vhdlParser.Variable_assignment_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.variable_assignment_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable_assignment_statement([NotNull] vhdlParser.Variable_assignment_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.conditional_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditional_expression([NotNull] vhdlParser.Conditional_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.conditional_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditional_expression([NotNull] vhdlParser.Conditional_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable_declaration([NotNull] vhdlParser.Variable_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable_declaration([NotNull] vhdlParser.Variable_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.wait_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWait_statement([NotNull] vhdlParser.Wait_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.wait_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWait_statement([NotNull] vhdlParser.Wait_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.waveform"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWaveform([NotNull] vhdlParser.WaveformContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.waveform"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWaveform([NotNull] vhdlParser.WaveformContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="vhdlParser.waveform_element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWaveform_element([NotNull] vhdlParser.Waveform_elementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="vhdlParser.waveform_element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWaveform_element([NotNull] vhdlParser.Waveform_elementContext context);
}
